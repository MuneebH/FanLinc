{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\munee\\\\Desktop\\\\project-stact\\\\Fanlinc\\\\Front-end\\\\src\\\\Components\\\\postview.js\";\nimport React, { Component } from 'react';\nimport NavigationBar from './NavigationBar';\nimport axios from 'axios';\nimport shortid from 'shortid';\nimport { Form } from 'reactstrap';\nimport dotenv from 'dotenv';\nimport '../CSS-FOLDER/postview.css';\ndotenv.config();\nconst API_HOST_URL = process.env.REACT_APP_STACT_WEBSITE;\nconst errorStyle = {\n  color: \"red\"\n};\nconst successStyle = {\n  color: \"green\"\n};\nconst cursor = {\n  cursor: \"pointer\"\n};\nconst bold = {\n  fontWeight: \"bold\",\n  textAlign: 'center'\n};\n\nclass postview extends Component {\n  constructor(props) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParamFandom = urlParams.get('fandomId');\n    const myParamPost = urlParams.get('postId');\n    super(props);\n\n    this.viewProfile = event => {\n      this.props.history.push(\"/Profile?user=\" + event.target.id);\n    };\n\n    this.state = {\n      originalPoster: [],\n      currComment: '',\n      error: null,\n      success: null,\n      allComments: []\n    };\n\n    if (myParamPost == null || myParamFandom == null) {\n      this.props.history.push(\"/Home\");\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.clearData = this.clearData.bind(this);\n  }\n\n  getPost() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParamFandom = urlParams.get('fandomId');\n    const myParamPost = urlParams.get('postId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getThisPost/\") + myParamFandom + '/' + myParamPost).then(response => {\n      this.setState({\n        originalPoster: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  check() {\n    const urlParams = new URLSearchParams(window.location.search);\n  }\n\n  componentDidMount() {\n    this.getPost();\n    this.getComments();\n  }\n\n  handleSubmit(event) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParamFandom = urlParams.get('fandomId');\n    const myParamPost = urlParams.get('postId');\n    axios.post(\"\".concat(API_HOST_URL, \"/createComment\"), {\n      \"userId\": localStorage.getItem('id'),\n      \"postId\": myParamPost,\n      \"fandomId\": myParamFandom,\n      \"comment\": this.state.currComment\n    }).then(response => {\n      if (response.data.status === 200) {\n        this.setState({\n          error: null\n        });\n        this.setState({\n          success: response.data.msg\n        });\n        this.clearData();\n        this.getComments();\n      } else {\n        this.setState({\n          success: null\n        });\n        this.setState({\n          error: response.data.msg\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    event.preventDefault();\n  }\n\n  clearData() {\n    this.setState({\n      currComment: ''\n    });\n  }\n\n  getComments() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParamFandom = urlParams.get('fandomId');\n    const myParamPost = urlParams.get('postId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getComments/\") + myParamFandom + '/' + myParamPost).then(response => {\n      this.setState({\n        allComments: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const originalPoster = this.state.originalPoster.map(o => React.createElement(\"div\", {\n      className: \"comments\",\n      key: shortid.generate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: bold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Title: \", o.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: cursor,\n      className: \"username\",\n      id: o.userId,\n      onClick: this.viewProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"By: \", o.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, o.description)))));\n    const success = this.state.success;\n    const error = this.state.error;\n    const allComments = this.state.allComments.map(o => React.createElement(\"div\", {\n      key: shortid.generate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: cursor,\n      id: o.userId,\n      onClick: this.viewProfile,\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, o.name)), React.createElement(\"p\", {\n      id: o.commentId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, o.comment)));\n    return React.createElement(\"div\", {\n      id: \"allview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container_rest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, originalPoster, React.createElement(\"div\", {\n      className: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"currComment\",\n      placeholder: \"Share your thoughts...\",\n      className: \"comment-content\",\n      maxLength: \"1000\",\n      value: this.state.currComment,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"insert-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment-as\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: errorStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, error), React.createElement(\"span\", {\n      style: successStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, success), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"list-comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, allComments)))));\n  }\n\n}\n\nexport default postview;","map":{"version":3,"sources":["C:/Users/munee/Desktop/project-stact/Fanlinc/Front-end/src/Components/postview.js"],"names":["React","Component","NavigationBar","axios","shortid","Form","dotenv","config","API_HOST_URL","process","env","REACT_APP_STACT_WEBSITE","errorStyle","color","successStyle","cursor","bold","fontWeight","textAlign","postview","constructor","props","urlParams","URLSearchParams","window","location","search","myParamFandom","get","myParamPost","viewProfile","event","history","push","target","id","state","originalPoster","currComment","error","success","allComments","handleSubmit","bind","handleChange","clearData","getPost","then","response","setState","data","catch","console","log","value","check","componentDidMount","getComments","post","localStorage","getItem","status","msg","preventDefault","render","map","o","generate","title","userId","name","description","commentId","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,4BAAP;AACAA,MAAM,CAACC,MAAP;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAjC;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB;AAIA,MAAMC,YAAY,GAAG;AACnBD,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,MAAME,MAAM,GAAG;AACbA,EAAAA,MAAM,EAAE;AADK,CAAf;AAIA,MAAMC,IAAI,GAAG;AACXC,EAAAA,UAAU,EAAE,MADD;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;;AAMA,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAE/BmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAd,CAAtB;AACA,UAAMC,WAAW,GAAGP,SAAS,CAACM,GAAV,CAAc,QAAd,CAApB;AAGA,UAAMP,KAAN;;AANiB,SA4DnBS,WA5DmB,GA4DJC,KAAD,IAAW;AACvB,WAAKV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,mBAAmBF,KAAK,CAACG,MAAN,CAAaC,EAAxD;AACD,KA9DkB;;AAOjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,OAAO,EAAE,IAJE;AAKXC,MAAAA,WAAW,EAAE;AALF,KAAb;;AAQA,QAAIZ,WAAW,IAAI,IAAf,IAAuBF,aAAa,IAAI,IAA5C,EAAkD;AAChD,WAAKN,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;;AAED,SAAKS,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAIDG,EAAAA,OAAO,GAAG;AACR,UAAMxB,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAd,CAAtB;AACA,UAAMC,WAAW,GAAGP,SAAS,CAACM,GAAV,CAAc,QAAd,CAApB;AACAzB,IAAAA,KAAK,CAACyB,GAAN,CAAU,UAAGpB,YAAH,qBAAiCmB,aAAjC,GAAiD,GAAjD,GAAuDE,WAAjE,EACGkB,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,cAAc,EAAEW,QAAQ,CAACE;AAA3B,OAAd;AACD,KAHH,EAIGC,KAJH,CAIS,UAAUZ,KAAV,EAAiB;AACtBa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AAED,KAPH;AAQD;;AAGDK,EAAAA,YAAY,CAACb,KAAD,EAAQ;AAClB,SAAKkB,QAAL,CAAc;AAAE,OAAClB,KAAK,CAACG,MAAN,CAAaC,EAAd,GAAmBJ,KAAK,CAACG,MAAN,CAAaoB;AAAlC,KAAd;AACD;;AAGDC,EAAAA,KAAK,GAAG;AACN,UAAMjC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AAID;;AAID8B,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,OAAL;AACA,SAAKW,WAAL;AACD;;AAMDf,EAAAA,YAAY,CAACX,KAAD,EAAQ;AAClB,UAAMT,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAd,CAAtB;AACA,UAAMC,WAAW,GAAGP,SAAS,CAACM,GAAV,CAAc,QAAd,CAApB;AACAzB,IAAAA,KAAK,CAACuD,IAAN,WAAclD,YAAd,qBAA4C;AAC1C,gBAAUmD,YAAY,CAACC,OAAb,CAAqB,IAArB,CADgC;AAE1C,gBAAU/B,WAFgC;AAG1C,kBAAYF,aAH8B;AAI1C,iBAAW,KAAKS,KAAL,CAAWE;AAJoB,KAA5C,EAMGS,IANH,CAMSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACE,IAAT,CAAcW,MAAd,KAAyB,GAA7B,EAAkC;AAChC,aAAKZ,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,aAAKU,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAEQ,QAAQ,CAACE,IAAT,CAAcY;AAAzB,SAAd;AACA,aAAKjB,SAAL;AACA,aAAKY,WAAL;AACD,OALD,MAKO;AACL,aAAKR,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKS,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAES,QAAQ,CAACE,IAAT,CAAcY;AAAvB,SAAd;AAED;AAEF,KAlBH,EAmBGX,KAnBH,CAmBS,UAAUZ,KAAV,EAAiB;AACtBa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AAED,KAtBH;AAuBAR,IAAAA,KAAK,CAACgC,cAAN;AACD;;AAGDlB,EAAAA,SAAS,GAAG;AACV,SAAKI,QAAL,CAAc;AACZX,MAAAA,WAAW,EAAE;AADD,KAAd;AAID;;AAGDmB,EAAAA,WAAW,GAAG;AACZ,UAAMnC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAd,CAAtB;AACA,UAAMC,WAAW,GAAGP,SAAS,CAACM,GAAV,CAAc,QAAd,CAApB;AACAzB,IAAAA,KAAK,CAACyB,GAAN,CAAU,UAAGpB,YAAH,qBAAiCmB,aAAjC,GAAiD,GAAjD,GAAuDE,WAAjE,EACGkB,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAEO,QAAQ,CAACE;AADV,OAAd;AAID,KANH,EAOGC,KAPH,CAOS,UAAUZ,KAAV,EAAiB;AACtBa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AAED,KAVH;AAYD;;AAWDyB,EAAAA,MAAM,GAAG;AAEP,UAAM3B,cAAc,GAAG,KAAKD,KAAL,CAAWC,cAAX,CAA0B4B,GAA1B,CAA8BC,CAAC,IACpD;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAE9D,OAAO,CAAC+D,QAAR,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAEnD,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2BkD,CAAC,CAACE,KAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAM,MAAA,KAAK,EAAErD,MAAb;AAAqB,MAAA,SAAS,EAAC,UAA/B;AAA0C,MAAA,EAAE,EAAEmD,CAAC,CAACG,MAAhD;AAAwD,MAAA,OAAO,EAAE,KAAKvC,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAwFoC,CAAC,CAACI,IAA1F,CAAH,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,CAAC,CAACK,WAAN,CAHF,CADF,CADF,CADqB,CAAvB;AAiBA,UAAM/B,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAA3B;AACA,UAAMD,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AAEA,UAAME,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAAX,CAAuBwB,GAAvB,CAA2BC,CAAC,IAC9C;AAAK,MAAA,GAAG,EAAE9D,OAAO,CAAC+D,QAAR,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAM,MAAA,KAAK,EAAEpD,MAAb;AAAqB,MAAA,EAAE,EAAEmD,CAAC,CAACG,MAA3B;AAAmC,MAAA,OAAO,EAAE,KAAKvC,WAAjD;AAA8D,MAAA,SAAS,EAAC,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoFoC,CAAC,CAACI,IAAtF,CAAH,CADF,EAEE;AAAG,MAAA,EAAE,EAAEJ,CAAC,CAACM,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBN,CAAC,CAACO,OAAvB,CAFF,CADkB,CAApB;AAWA,WACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGpC,cAHH,EAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,EAAE,EAAC,aAAb;AAA2B,MAAA,WAAW,EAAC,wBAAvC;AAAgE,MAAA,SAAS,EAAC,iBAA1E;AAA4F,MAAA,SAAS,EAAC,MAAtG;AAA6G,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,WAA/H;AAA4I,MAAA,QAAQ,EAAE,KAAKM,YAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAEhC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B2B,KAA1B,CADF,EAEE;AAAM,MAAA,KAAK,EAAEzB,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B0B,OAA5B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,KAAK,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CADF,CAFF,CAFF,EAcE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,WADH,CAdF,CANF,CADF,CAJF,CADF;AA+CD;;AApN8B;;AAwNjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport NavigationBar from './NavigationBar'\r\nimport axios from 'axios';\r\nimport shortid from 'shortid';\r\nimport { Form } from 'reactstrap';\r\nimport dotenv from 'dotenv';\r\nimport '../CSS-FOLDER/postview.css'\r\ndotenv.config();\r\nconst API_HOST_URL = process.env.REACT_APP_STACT_WEBSITE\r\n\r\nconst errorStyle = {\r\n  color: \"red\"\r\n}\r\n\r\nconst successStyle = {\r\n  color: \"green\"\r\n}\r\n\r\nconst cursor = {\r\n  cursor: \"pointer\"\r\n}\r\n\r\nconst bold = {\r\n  fontWeight: \"bold\",\r\n  textAlign: 'center'\r\n}\r\n\r\n\r\nclass postview extends Component {\r\n\r\n  constructor(props) {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParamFandom = urlParams.get('fandomId');\r\n    const myParamPost = urlParams.get('postId');\r\n\r\n\r\n    super(props);\r\n    this.state = {\r\n      originalPoster: [],\r\n      currComment: '',\r\n      error: null,\r\n      success: null,\r\n      allComments: []\r\n    };\r\n\r\n    if (myParamPost == null || myParamFandom == null) {\r\n      this.props.history.push(\"/Home\")\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.clearData = this.clearData.bind(this)\r\n  }\r\n\r\n\r\n\r\n  getPost() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParamFandom = urlParams.get('fandomId');\r\n    const myParamPost = urlParams.get('postId');\r\n    axios.get(`${API_HOST_URL}/getThisPost/` + myParamFandom + '/' + myParamPost)\r\n      .then((response) => {\r\n        this.setState({ originalPoster: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n\r\n      });\r\n  }\r\n\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n\r\n  check() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getPost();\r\n    this.getComments();\r\n  }\r\n\r\n  viewProfile = (event) => {\r\n    this.props.history.push(\"/Profile?user=\" + event.target.id);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParamFandom = urlParams.get('fandomId');\r\n    const myParamPost = urlParams.get('postId');\r\n    axios.post(`${API_HOST_URL}/createComment`, {\r\n      \"userId\": localStorage.getItem('id'),\r\n      \"postId\": myParamPost,\r\n      \"fandomId\": myParamFandom,\r\n      \"comment\": this.state.currComment\r\n    })\r\n      .then((response) => {\r\n        if (response.data.status === 200) {\r\n          this.setState({ error: null });\r\n          this.setState({ success: response.data.msg });\r\n          this.clearData();\r\n          this.getComments();\r\n        } else {\r\n          this.setState({ success: null })\r\n          this.setState({ error: response.data.msg });\r\n\r\n        }\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n\r\n      });\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  clearData() {\r\n    this.setState({\r\n      currComment: ''\r\n    });\r\n\r\n  }\r\n\r\n\r\n  getComments() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParamFandom = urlParams.get('fandomId');\r\n    const myParamPost = urlParams.get('postId');\r\n    axios.get(`${API_HOST_URL}/getComments/` + myParamFandom + '/' + myParamPost)\r\n      .then((response) => {\r\n        this.setState({\r\n          allComments: response.data\r\n        });\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const originalPoster = this.state.originalPoster.map(o =>\r\n      <div className=\"comments\" key={shortid.generate()}>\r\n        <div className=\"list-comments\">\r\n          <div>\r\n            <span style={bold}>Title: {o.title}</span>\r\n            <p><span style={cursor} className=\"username\" id={o.userId} onClick={this.viewProfile}>By: {o.name}</span></p>\r\n            <p>{o.description}</p>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n\r\n    const success = this.state.success;\r\n    const error = this.state.error;\r\n\r\n    const allComments = this.state.allComments.map(o =>\r\n      <div key={shortid.generate()}>\r\n        <p><span style={cursor} id={o.userId} onClick={this.viewProfile} className=\"username\">{o.name}</span></p>\r\n        <p id={o.commentId}>{o.comment}</p>\r\n\r\n      </div>\r\n\r\n    );\r\n\r\n\r\n\r\n    return (\r\n      <div id=\"allview\">\r\n\r\n        <NavigationBar />\r\n\r\n        <div className=\"container_rest\">\r\n          <div className=\"all_info\">\r\n\r\n\r\n            {originalPoster}\r\n\r\n\r\n            <div className=\"comments\">\r\n              <h1>Comments</h1>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <textarea id=\"currComment\" placeholder=\"Share your thoughts...\" className=\"comment-content\" maxLength=\"1000\" value={this.state.currComment} onChange={this.handleChange}></textarea>\r\n                <div className=\"insert-text\">\r\n                  <div className=\"comment-as\">\r\n                    <span style={errorStyle}>{error}</span>\r\n                    <span style={successStyle}>{success}</span>\r\n                    <span>\r\n                      <input className=\"btn btn-primary\" type=\"submit\" value=\"Create\" />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n              <div className=\"list-comments\">\r\n                {allComments}\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default postview;"]},"metadata":{},"sourceType":"module"}
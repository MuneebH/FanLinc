{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\munee\\\\Desktop\\\\project-stact\\\\Fanlinc\\\\Front-end\\\\src\\\\Components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport NavigationBar from './NavigationBar';\nimport { Nav, NavItem, NavLink, Button, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport shortid from 'shortid';\nimport dotenv from 'dotenv';\nimport '../CSS-FOLDER/home.css';\nimport '../CSS-FOLDER/SearchBar.css';\ndotenv.config();\nconst API_HOST_URL = process.env.REACT_APP_STACT_WEBSITE;\n\nclass Home extends Component {\n  constructor(props) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    super(props);\n\n    this.viewProfile = event => {\n      this.props.history.push(\"/Profile?user=\" + event.target.id);\n    };\n\n    this.viewPost = event => {\n      this.props.history.push(\"/Home/Post?postId=\" + event.target.id + \"&fandomId=\" + this.state.fandomId);\n    };\n\n    this.state = {\n      myFandoms: [],\n      fandomId: myParam,\n      fandomInfo: [],\n      postInfo: [],\n      searchQuery: ''\n    };\n\n    if (localStorage.getItem('loggedin') !== 'true') {\n      this.props.history.push(\"/\");\n    }\n\n    this.refreshId = this.refreshId.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getPostInfo() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getPost/\") + myParam).then(response => {\n      this.setState({\n        postInfo: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getFandomInfo() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getGenreAndFandom/\") + myParam).then(response => {\n      this.setState({\n        fandomInfo: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  refreshId(event) {\n    this.props.history.push(\"/Home?fandomId=\" + event.target.id);\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    this.setState({\n      fandomId: myParam\n    });\n    this.getFandomInfo();\n    this.getPostInfo();\n  }\n\n  getMyFandoms() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getMyFandoms/\") + localStorage.getItem('id')).then(response => {\n      this.setState({\n        myFandoms: response.data\n      });\n      let found = false;\n\n      for (let i = 0; i < this.state.myFandoms.length; i++) {\n        if (this.state.myFandoms[i]['value'] === Number(myParam)) {\n          found = true;\n        }\n      }\n\n      if (found === false) {\n        this.props.history.push(\"/Home\");\n\n        if (this.state.fandomId !== null) {\n          window.location.reload();\n        }\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getMyFandoms();\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n\n    if (myParam !== null) {\n      this.getFandomInfo();\n      this.getPostInfo();\n    }\n  }\n\n  componentDidUpdate(newProps) {\n    if (this.props.location !== newProps.location) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const myParam = urlParams.get('fandomId');\n      console.log(myParam);\n\n      if (myParam === null) {\n        this.setState({\n          fandomInfo: []\n        });\n        this.setState({\n          postInfo: []\n        });\n      }\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state.searchQuery);\n\n    if (this.state.searchQuery === '') {\n      this.getPostInfo();\n      return;\n    }\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getPost/\") + myParam + \"/\" + this.state.searchQuery).then(response => {\n      this.setState({\n        postInfo: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const fandomId = this.state.fandomId;\n    const MyFandoms = this.state.myFandoms.map(o => React.createElement(NavItem, {\n      key: o.name,\n      id: \"navi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"text-center\",\n      href: \"#\",\n      onClick: this.refreshId,\n      id: o.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, o.name)));\n    const fandomInfo = this.state.fandomInfo.map(o => React.createElement(\"span\", {\n      key: o.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, o.name), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Genre: \", o.genre), React.createElement(\"div\", {\n      className: \"searchdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchQuery\",\n      onChange: this.handleChange,\n      value: this.state.searchQuery,\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      id: \"search-pads\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }))))));\n    const postInfo = this.state.postInfo.map(o => React.createElement(\"span\", {\n      key: shortid.generate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"#\",\n      id: o.postId,\n      onClick: this.viewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, o.title), React.createElement(NavLink, {\n      href: \"#\",\n      id: o.userId,\n      onClick: this.viewProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Created by: \", o.name), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Level \", o.level), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      id: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container_rest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"containers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Fandom Page\"), React.createElement(Nav, {\n      id: \"navi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, MyFandoms), fandomId != null ? React.createElement(NavLink, {\n      to: \"/Home/CreatePost?fandomId=\" + fandomId,\n      exact: true,\n      activeClassName: \"current\",\n      tag: RRNavLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Create A post \")) : null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), fandomInfo, postInfo)))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/munee/Desktop/project-stact/Fanlinc/Front-end/src/Components/Home.js"],"names":["React","Component","NavigationBar","Nav","NavItem","NavLink","Button","Form","axios","RRNavLink","shortid","dotenv","config","API_HOST_URL","process","env","REACT_APP_STACT_WEBSITE","Home","constructor","props","urlParams","URLSearchParams","window","location","search","myParam","get","viewProfile","event","history","push","target","id","viewPost","state","fandomId","myFandoms","fandomInfo","postInfo","searchQuery","localStorage","getItem","refreshId","bind","handleSubmit","handleChange","getPostInfo","then","response","setState","data","catch","error","console","log","getFandomInfo","getMyFandoms","found","i","length","Number","reload","componentDidMount","componentDidUpdate","newProps","value","preventDefault","render","MyFandoms","map","o","name","genre","generate","postId","title","userId","level"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NavigationBar from './NavigationBar'\r\nimport { Nav, NavItem, NavLink, Button, Form } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport shortid from 'shortid';\r\nimport dotenv from 'dotenv';\r\n\r\nimport '../CSS-FOLDER/home.css'\r\nimport '../CSS-FOLDER/SearchBar.css'\r\ndotenv.config();\r\nconst API_HOST_URL = process.env.REACT_APP_STACT_WEBSITE\r\n\r\nclass Home extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n    super(props);\r\n    this.state = {\r\n      myFandoms: [],\r\n      fandomId: myParam,\r\n      fandomInfo: [],\r\n      postInfo: [],\r\n      searchQuery: ''\r\n\r\n    };\r\n    if (localStorage.getItem('loggedin') !== 'true') {\r\n      this.props.history.push(\"/\")\r\n    }\r\n\r\n    this.refreshId = this.refreshId.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  getPostInfo() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n\r\n\r\n    axios.get(`${API_HOST_URL}/getPost/` + myParam)\r\n      .then((response) => {\r\n        this.setState({ postInfo: response.data })\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  getFandomInfo() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n\r\n\r\n    axios.get(`${API_HOST_URL}/getGenreAndFandom/` + myParam)\r\n      .then((response) => {\r\n        this.setState({ fandomInfo: response.data })\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  refreshId(event) {\r\n    this.props.history.push(\"/Home?fandomId=\" + event.target.id)\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n    this.setState({ fandomId: myParam });\r\n    this.getFandomInfo();\r\n    this.getPostInfo();\r\n\r\n\r\n  }\r\n\r\n  getMyFandoms() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n\r\n    axios.get(`${API_HOST_URL}/getMyFandoms/` + localStorage.getItem('id'))\r\n      .then((response) => {\r\n        this.setState({ myFandoms: response.data });\r\n        let found = false\r\n        for (let i = 0; i < this.state.myFandoms.length; i++) {\r\n          if (this.state.myFandoms[i]['value'] === Number(myParam)) {\r\n            found = true;\r\n          }\r\n        }\r\n        if (found === false) {\r\n          this.props.history.push(\"/Home\");\r\n          if (this.state.fandomId !== null) {\r\n            window.location.reload();\r\n          }\r\n        }\r\n\r\n\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getMyFandoms();\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n    if (myParam !== null) {\r\n      this.getFandomInfo();\r\n      this.getPostInfo();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(newProps) {\r\n    if (this.props.location !== newProps.location) {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const myParam = urlParams.get('fandomId')\r\n      console.log(myParam);\r\n      if (myParam === null) {\r\n        this.setState({ fandomInfo: [] });\r\n        this.setState({ postInfo: [] });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n\r\n\r\n  viewProfile = (event) => {\r\n    this.props.history.push(\"/Profile?user=\" + event.target.id);\r\n\r\n  }\r\n\r\n\r\n\r\n  viewPost = (event) => {\r\n    this.props.history.push(\"/Home/Post?postId=\" + event.target.id + \"&fandomId=\" + this.state.fandomId)\r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.searchQuery);\r\n    if (this.state.searchQuery === '') {\r\n      this.getPostInfo();\r\n      return;\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n\r\n    axios.get(`${API_HOST_URL}/getPost/` + myParam + \"/\" + this.state.searchQuery)\r\n      .then((response) => {\r\n        this.setState({ postInfo: response.data });\r\n\r\n\r\n\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const fandomId = this.state.fandomId;\r\n    const MyFandoms = this.state.myFandoms.map(o =>\r\n      <NavItem key={o.name} id=\"navi\">\r\n        <NavLink className=\"text-center\" href=\"#\" onClick={this.refreshId} id={o.value} >{o.name}</NavLink>\r\n      </NavItem>\r\n    );\r\n\r\n    const fandomInfo = this.state.fandomInfo.map(o =>\r\n      <span key={o.name}>\r\n        <h1>{o.name}</h1>\r\n        <h6>Genre: {o.genre}</h6>\r\n\r\n        <div className=\"searchdiv\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" id=\"searchQuery\" onChange={this.handleChange} value={this.state.searchQuery} placeholder=\"Search\" ></input>\r\n            <button type=\"submit\"><i className=\"fa fa-search\" id=\"search-pads\"></i></button>\r\n\r\n          </Form>\r\n        </div>\r\n\r\n      </span>\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const postInfo = this.state.postInfo.map(o =>\r\n\r\n      <span key={shortid.generate()}>\r\n        <div>\r\n          <NavLink href=\"#\" id={o.postId} onClick={this.viewPost}>{o.title}</NavLink>\r\n          <NavLink href=\"#\" id={o.userId} onClick={this.viewProfile}>Created by: {o.name}</NavLink>\r\n          <small>Level {o.level}</small>\r\n          <hr />\r\n        </div>\r\n      </span>\r\n\r\n\r\n    );\r\n\r\n\r\n    return (\r\n      <div id=\"home\">\r\n\r\n        <NavigationBar />\r\n\r\n        <div className=\"container_rest\">\r\n          <div className=\"containers\">\r\n            <div className=\"all_info\">\r\n\r\n              <div className=\"text-center\">\r\n\r\n                <h3>Fandom Page</h3>\r\n\r\n                <Nav id=\"navi\">\r\n                  {MyFandoms}\r\n                </Nav>\r\n\r\n\r\n\r\n\r\n                {fandomId != null ?\r\n                  <NavLink to={\"/Home/CreatePost?fandomId=\" + fandomId} exact activeClassName=\"current\" tag={RRNavLink}>\r\n                    <Button>Create A post </Button>\r\n                  </NavLink>\r\n                  : null\r\n                }\r\n\r\n\r\n\r\n                <hr />\r\n\r\n                {fandomInfo}\r\n\r\n                {postInfo}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
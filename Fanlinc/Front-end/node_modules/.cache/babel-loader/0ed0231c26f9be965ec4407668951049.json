{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\munee\\\\Desktop\\\\project-stact\\\\Fanlinc\\\\Front-end\\\\src\\\\Components\\\\FandomPageBar.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport './Login.css';\nimport dotenv from 'dotenv';\nimport '../CSS-FOLDER/FandomPageBar.css';\nimport { Nav, NavItem, NavLink, Button } from 'reactstrap';\nimport { Route, withRouter } from 'react-router-dom';\ndotenv.config();\nconst API_HOST_URL = process.env.REACT_APP_STACT_WEBSITE;\nconst errorStyle = {\n  color: \"red\"\n};\n\nclass FandomPageBar extends Component {\n  constructor(props) {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    super(props);\n    this.state = {\n      myFandoms: [],\n      fandomId: myParam,\n      fandomInfo: [],\n      postInfo: []\n    };\n\n    if (localStorage.getItem('loggedin') !== 'true') {\n      this.props.history.push(\"/\");\n    }\n\n    this.refreshId = this.refreshId.bind(this);\n  }\n\n  refreshId(event) {\n    console.log(event.target.id);\n    this.props.history.push(\"/Home?fandomId=\" + event.target.id);\n  }\n\n  getMyFandoms() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const myParam = urlParams.get('fandomId');\n    axios.get(\"\".concat(API_HOST_URL, \"/getMyFandoms/\") + localStorage.getItem('id')).then(response => {\n      this.setState({\n        myFandoms: response.data\n      });\n\n      if (myParam) {\n        let found = false;\n\n        for (let i = 0; i < this.state.myFandoms.length; i++) {\n          if (this.state.myFandoms[i]['value'] === Number(myParam)) {\n            found = true;\n          }\n        }\n\n        if (found === false) {\n          this.props.history.push(\"/Home\");\n\n          if (this.state.fandomId !== null) {\n            window.location.reload();\n          }\n        }\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getMyFandoms();\n  }\n\n  render() {\n    const MyFandoms = this.state.myFandoms.map(o => React.createElement(\"div\", {\n      class: \"sidebarFandom\",\n      key: o.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"#\",\n      onClick: this.refreshId,\n      id: o.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, o.name)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Fandom\"), MyFandoms));\n  }\n\n}\n\nexport default withRouter(FandomPageBar);","map":{"version":3,"sources":["C:/Users/munee/Desktop/project-stact/Fanlinc/Front-end/src/Components/FandomPageBar.js"],"names":["React","Component","axios","dotenv","Nav","NavItem","NavLink","Button","Route","withRouter","config","API_HOST_URL","process","env","REACT_APP_STACT_WEBSITE","errorStyle","color","FandomPageBar","constructor","props","urlParams","URLSearchParams","window","location","search","myParam","get","state","myFandoms","fandomId","fandomInfo","postInfo","localStorage","getItem","history","push","refreshId","bind","event","console","log","target","id","getMyFandoms","then","response","setState","data","found","i","length","Number","reload","catch","error","componentDidMount","render","MyFandoms","map","o","name","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport './Login.css'\r\nimport dotenv from 'dotenv'\r\nimport '../CSS-FOLDER/FandomPageBar.css'\r\nimport { Nav, NavItem, NavLink, Button } from 'reactstrap';\r\nimport { Route, withRouter } from 'react-router-dom';\r\ndotenv.config();\r\nconst API_HOST_URL = process.env.REACT_APP_STACT_WEBSITE\r\n\r\nconst errorStyle = {\r\n  color: \"red\"\r\n}\r\n\r\nclass FandomPageBar extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n    super(props);\r\n    this.state = {\r\n      myFandoms: [],\r\n      fandomId: myParam,\r\n      fandomInfo: [],\r\n      postInfo: []\r\n\r\n    };\r\n    if (localStorage.getItem('loggedin') !== 'true') {\r\n      this.props.history.push(\"/\")\r\n    }\r\n\r\n    this.refreshId = this.refreshId.bind(this);\r\n  }\r\n\r\n\r\n  refreshId(event) {\r\n    console.log(event.target.id);\r\n    this.props.history.push(\"/Home?fandomId=\" + event.target.id)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getMyFandoms() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get('fandomId')\r\n\r\n    axios.get(`${API_HOST_URL}/getMyFandoms/` + localStorage.getItem('id'))\r\n      .then((response) => {\r\n        this.setState({ myFandoms: response.data });\r\n        if (myParam) {\r\n          let found = false\r\n          for (let i = 0; i < this.state.myFandoms.length; i++) {\r\n            if (this.state.myFandoms[i]['value'] === Number(myParam)) {\r\n              found = true;\r\n            }\r\n          }\r\n          if (found === false) {\r\n            this.props.history.push(\"/Home\");\r\n            if (this.state.fandomId !== null) {\r\n              window.location.reload();\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n\r\n      });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getMyFandoms();\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const MyFandoms = this.state.myFandoms.map(o =>\r\n\r\n      <div class=\"sidebarFandom\" key={o.name}>\r\n        <NavLink href=\"#\" onClick={this.refreshId} id={o.value}>{o.name}</NavLink>\r\n      </div>\r\n\r\n    );\r\n    return (\r\n      <div>\r\n        <div class=\"sidebar\">\r\n          <h2>Fandom</h2>\r\n\r\n          {MyFandoms}\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FandomPageBar);\r\n"]},"metadata":{},"sourceType":"module"}